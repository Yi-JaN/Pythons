#數字矩陣正反面 (三角形)
w=int(input())  #輸入一個高
x1=0          #這邊的x0是做正向的並且算是輔助身分計算,x0是以高為基準所定,那因為這邊是正向,所以x1先為0
y1=1         #y1=1 這樣一開始y1=y1+x1就可以計算算的起來
for i in range(1,w+1,1) : #正向外圈for取高 1<w+1 1次循環+1
    for j in range(1,i+1,1) : #正向內圈for 那因為是三角形,然後這邊算正向,所以這邊for 取目前外圈for的i值
        y1=y1+x1            #計算方面在內圈做,並且循環到內圈for結束,然後算完丟入內圈的print
        print(y1,end="\t") #那因為這裡的print有下end所以就列印時不換行,計算到內圈for結束
        y1+=1
    print()   #內圈for OK之後,來到這行換行字元,繼續做下一行
    x1+=1     #這邊是先算正向,所以每換下一行,x1以高為基準,1次+1
    y1=1      #y1這邊強制歸1
x2=(w-1)-1 #這邊開始做反向,x2是看要高所定的,那因為x2這邊反向,所以w-1 這個-1是減 
y2=1   #反向-1 然後後面又1個-1 是減下面的外圈for的取高 -1的 這樣搭配y2=1 就可以一開始 y2=y2+x2就可以計算得起來
for k in range(w-1,0,-1) : #反向的外圈for取高 w-1>0 1次循環+(-1)
    for k1 in range(1,k+1,1) : #反向的內圈for 因為是反向版的三角形,所以內圈取上面外圈for 目前k值
        y2=y2+x2           #計算方面一樣在內圈計算循環,內圈的print一樣算好循環一次,就列印一次
        print(y2,end="\t") #那因為有下end,所以這行print()列印時就不必換行字元
        y2+=1
    print()     #反向的內圈for OK之後,來到這行換行字元,之後算下一行    
    x2-=1  #這邊因為是算反向三角形,所以每換好行一次,x2就減1 1次
    y2=1   #y2這邊強制歸1

# w->6
#  A:1
#    2   4
#    3   6   9
#    4   8   12  16
#    5   10  15  20  25
#    6   12  18  24  30  36 
#    5   10  15  20  25
#    4   8   12  16
#    3   6   9  
#    2   4 
#    1