#遞迴函數: 費式數列
#python這題遞迴跟Java不一樣,要先從遞迴函數下方由下至上看到def遞迴函數裡面
def answer(F) : #answer裡的F是-> F<->n
    if F==0 :        #遞迴函數裡把公式下出來,那他把正整數丟進去循環
        return F     #循環到最後F(n)如果是1或0,那該正整數分解值就OK
    elif F==1 :      #然後該正整數分解值就不用在丟回上方做遞迴函數
        return F
    else :
        return answer(F-1)+answer(F-2) #注意有下函數名稱,所以分解出來的值丟回下方,又可都丟回上方做遞迴

n=int(input()) #輸入一個正整數
print(answer(n)) #把該正整數丟入函數名稱為answer裡面,之後在由下至上丟入遞迴函數裡

#費式數列公式如下方:(下方F我把他改成answer函數名稱)
# F0=0                
# F1=1
# Fn=Fn-1+Fn-2

#假設n設7=(6+5)
#   n=(5+4)+(4+3)
#   n=(4+3)+(3+2)+(3+2)+(2+1)
#   n=(3+2)+(2+1)+(2+1)+(1+0)+(2+1)+(1+0)+(1+0)+(1)
#  n=(2+1)+(1+0)+(1+0)+(1)+(1+0)+(1)+(1)+(0)+(1+0)+(1)+(1)+(0)+(1)+(0)+(1)
#   n=(1+0)+(1)+(1)+(0)+(1)+(0)+(1)+(1)+(0)+(1)+(1)+(0)+(1)+(0)+(1)+(1)+(0)+(1)+(0)+(1)
#   n=1+1+1+1+1+1+1+1+1+1+1+1+1="13"
#敘述:以n設7來說 我設的正整數的值如果不是F==0 跟F==1 就是丟到else裡做公式算法 所以一開始我
#的7把他列F-1與F-2->得6與5,所以6+5,之後以此類推一樣如果6跟5分別不能帶進F==0跟F==1那就繼續丟到else裡做公式算法
#所以6跟5 先從6開始F-1與F-2->得5+4(5與4),之後換5開始F-1與F-2 ->得4+3(4與3)以此類推動作,之後做到後面如果假設分
#解到1與0 ,那就是符合if(F==0)跟elif(F==1)這行,所以就放一模一樣的值,下次運算解讀再碰到1與0,就不用管他們直接
#再放if(F==0)跟elif(F==1)再放一模一樣的值,以此類推反正就照公式跑! ""算到後面一整行如果不是1就是0就可以直接
#全部把值加起來""!加起來之後就可以給"n"了,然後就在下方列印n

#輸入值->15    輸入值->5    輸入值->0   輸入值->1
#    A: 610       A:  5        A:  0       A: 1
#

