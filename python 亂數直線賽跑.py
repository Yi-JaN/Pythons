import random
data=[] #設一維陣列
count=0 #用來記錄行進幾次亂數賽跑點
for o in range(0,20,1) : #把陣列初始設為0,陣列第一個位置值為0,所以從0開始 每循環1次+1
    data+=[int(0)] #每循環1次設一個0轉int值推給data一維陣列
data[0]=1  #初始設為0後,起點(值0)設為1,並且為起點開始賽跑   
print("初始狀態:",data) #先列印起始賽跑陣列長度   
z=True #而亂數賽跑,我用布林數,當到達終點(值19)時就為False,還沒達到的時候就用True讓他一直循環亂數
i=0 #i的工作是負責進行每一次亂數賽跑的值
j=0 #j的工作是負責清除上一個賽跑點,除了起點(值0)之外
k=0 #k的工作是看目前賽跑到哪個階段,確保到終點都能到值19不超出值19
print("賽跑進行中: ")
while z :
    k=i #每循環一次先看目前的賽跑階段,在進階判斷下方if迴圈
    if k==14 or k==15 or k==16 or k==17 or k==18 : #如果是k==14到k==18就進去,進去代表快接近終點19(值19)
        if k==14 : #k==14就進去
          run=random.randint(0,5) #14距離19差5,所以提前部屬縮短至0到5,到時到達終點才不會超出範圍
        elif k==15 : #k==15就進去
          run=random.randint(0,4) #15距離19差4,所以提前部屬縮短至0到4,到時到達終點才不會超出範圍
        elif k==16 : #k==16就進去
          run=random.randint(0,3) #16距離19差3,所以提前部屬縮短至0到3,到時到達終點才不會超出範圍
        elif k==17 : #k==17就進去
          run=random.randint(0,2) #17距離19差2,所以提前部屬縮短至0到2,到時到達終點才不會超出範圍
        elif k==18 : #k==18就進去
          run=random.randint(0,1) #18距離19差1,所以提前部屬縮短至0到1,到時到達終點才不會超出範圍  
    else : #其他低於14都是正常0至6範圍亂數產生
        run=random.randint(0,6)
    print("共行進",run,"步") #看亂數產生多少,進而產生賽跑跑幾步
    count+=1 #紀錄1次賽跑次數
    j=i #j=i功用是在下一次跑之前,先把這次的賽跑點歸0,除了一開始的起點(0(值0))
    if j>0 :
        data[j]=0
    i+=run #歸0後開始i去加剛剛亂數產生的賽跑步數,然後開始跑
    if i==19 : #如果i==19代表跑到終點,則進去
        data[i]=1 #針對目前data的i位置值設1(為到達終點)
        print(data) #然後列印陣列出來
        z=False #z設False,已經可以結束while循環
    elif i>=0 and i<19 : #如果i是0到18則進去
        data[i]=1 #針對目前data的i位置值設1
        print(data) #然後列印陣列出來
print("總共行進了",count,"次") #如果while ok後,就列印總共跑了幾次

#題目:亂數直線賽跑
#設一個一維陣列,並且給他值20(值0到值19),而值0為起點,設為1,值19為終點,當賽跑跑到值19
#時就停止,然後過程中要紀錄每次賽跑點,紀錄這次的賽跑點要記得把上一次的賽跑點歸0才能列
#印,最後算出共行進了幾次亂數賽跑點

#補充: if k==14 or k==15 or k==16 or k==17 or k==18 如下:
#為什麼k是從14開始判斷亂數的改變值呢? 因為初始亂數是從0到6再跑,假設賽跑階段到值14(k==14)
#就沒辦法在0到6,14開始為0到5縮短,所以為了確保亂數最終達到終點都能夠在值19不超出,就要提前
#部屬縮短亂數產生,這樣終點才不會超出範圍

#示範如下:
#初始狀態: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#賽跑進行中: 
#共行進 5 步
#[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#共行進 0 步
#[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
#共行進 6 步
#[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
#共行進 5 步
#[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
#共行進 1 步
#[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
#共行進 1 步
#[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
#共行進 1 步
#[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
#總共行進了 7 次    